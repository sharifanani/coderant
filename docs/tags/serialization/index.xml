<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Serialization on CodeRant</title><link>/tags/serialization/</link><description>Recent content in Serialization on CodeRant</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 17 Feb 2022 00:00:00 +0000</lastBuildDate><atom:link href="/tags/serialization/index.xml" rel="self" type="application/rss+xml"/><item><title>How good of a substitute are protocol buffers to JSON?</title><link>/post/2022-02-17-working-with-protobufs/</link><pubDate>Thu, 17 Feb 2022 00:00:00 +0000</pubDate><guid>/post/2022-02-17-working-with-protobufs/</guid><description>Why are we here? Over the past year or two, I&amp;rsquo;ve come within smelling distance of Protocol Buffers a few times, but I never actually got to touch them, do anything with them, or even contribute to a project where protocol buffers were being utilized. Figured writing a blog post about it is good enough reason to give it a shot!
What are we going to do with protobufs? In this post, we&amp;rsquo;re going to try to use protocol buffers to encode data coming in on a network socket and write it to disk.</description></item></channel></rss>